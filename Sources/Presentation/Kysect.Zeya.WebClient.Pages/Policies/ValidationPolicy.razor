@page "/validation-policies/{PolicyId:guid}"

<PageTitle>Validation Policy</PageTitle>

@if (_policy is null)
{
    <p><em>Loading...</em></p>
}
else
{
    <h3>Validation policy @_policy.Name</h3>
    <p>@_policy.Content</p>
    <table>
        <thead>
            <tr>
                <th>Name</th>
                <th>Type</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var repository in _policyRepositories)
            {
                <tr>
                    <td>@repository.Name</td>
                    <td>Github</td>
                </tr>
            }
        </tbody>
    </table>

    <FluentNavLink Href="@($"/validation-policies/{PolicyId}/add-github-repository")" Icon="@(new Icons.Regular.Size20.Add())" IconColor="Color.Accent">Add Github repository</FluentNavLink>
    <FluentNavLink Href="@($"/validation-policies/{PolicyId}/add-local-repository")" Icon="@(new Icons.Regular.Size20.Add())" IconColor="Color.Accent">Add local repository</FluentNavLink>

    <FluentButton Appearance="Appearance.Accent" @onclick="@RunValidation">Run validation</FluentButton>

    <table>
        <thead>
        <th>Repository name</th>
        <th>Action</th>
        @foreach (var ruleId in GetDiagnosticHeaders())
            {
            <th>@ruleId</th>
            }
        </thead>
        <tbody>
            @foreach (var repositoryDiagnostics in _diagnosticsTable)
            {
                <tr>
                    <td>@repositoryDiagnostics.RepositoryName</td>
                    <td>
                        <FluentButton Appearance="Appearance.Accent" @onclick="@(async () => await CreateFix(repositoryDiagnostics.Id))">Create Fix</FluentButton>
                    </td>
                    @foreach (var ruleId in GetDiagnosticHeaders())
                    {
                        <td>@repositoryDiagnostics.Diagnostics[ruleId]</td>
                    }
                </tr>
            }
        </tbody>
    </table>
}