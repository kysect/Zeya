@page "/validation-policies/{PolicyId:guid}"
@using Kysect.Zeya.Dtos

<PageTitle>Validation Policy</PageTitle>

@if (_policy is null)
{
    <p><em>Loading...</em></p>
}
else
{
    <FluentLabel Typo="Typography.H1"> Validation policy @_policy.Name </FluentLabel>

    <FluentAccordion>
        <FluentAccordionItem Heading="Validation scenario">
            <code style="white-space: pre;">
                @_policy.Content
            </code>
        </FluentAccordionItem>
    </FluentAccordion>

    <FluentLabel Typo="Typography.H2"> Repositories </FluentLabel>
    <FluentStack Orientation="Orientation.Horizontal">
        <FluentButton IconStart="@(new Icons.Filled.Size24.Add())"
                      Appearance="Appearance.Accent"
                      OnClick="@(() => _navigationManager.NavigateTo($"/validation-policies/{PolicyId}/add-github-repository"))">
            Add Github repository
        </FluentButton>
        <FluentButton IconStart="@(new Icons.Filled.Size24.Add())"
                      Appearance="Appearance.Accent"
                      OnClick="@(() => _navigationManager.NavigateTo($"/validation-policies/{PolicyId}/add-local-repository"))">
            Add local repository
        </FluentButton>
        <FluentButton IconStart="@(new Icons.Filled.Size24.Add())"
                      Appearance="Appearance.Accent"
                      OnClick="@(() => _navigationManager.NavigateTo($"/validation-policies/{PolicyId}/add-ado-repository"))">
            Add Azure DevOps repository
        </FluentButton>
        <FluentButton IconStart="@(new Icons.Filled.Size24.Add())"
                      Appearance="Appearance.Accent"
                      OnClick="@(() => _navigationManager.NavigateTo($"/validation-policies/{PolicyId}/add-remote-repository"))">
            Add remote repository
        </FluentButton>
    </FluentStack>

    <FluentDataGrid Loading="true" ItemsProvider="_repositoryProvider" Virtualize="true" ItemSize="46" GenerateHeader="GenerateHeaderOption.Sticky" TGridItem="ValidationPolicyRepositoryDto">
        <PropertyColumn Property="@(c => c.Id)" />
        <PropertyColumn Property="@(c => c.Name)" />
        <PropertyColumn Property="@(c => c.Type)" />
        <TemplateColumn Title="Actions" Align="@Align.End">
            <FluentButton aria-label="Details" IconEnd="@(new Icons.Regular.Size16.Edit())" Appearance="Appearance.Accent" OnClick="() => NavigateToDetailPage(context.Id)" />
        </TemplateColumn>
    </FluentDataGrid>

    <FluentLabel Typo="Typography.H2"> Validation </FluentLabel>
    <FluentButton Appearance="Appearance.Accent" @onclick="@RunValidation">Run validation</FluentButton>
    <FluentButton Appearance="Appearance.Accent" @onclick="@LoadDependencyTree">Generate dependency tree</FluentButton>

    @if (_diagnosticsTable.Any())
    {
        <table>
            <thead>
            <th>Repository name</th>
            <th>Action</th>
            @foreach (var ruleId in GetDiagnosticHeaders())
            {
                <th>@ruleId</th>
            }
            </thead>
            <tbody>
            @foreach (var repositoryDiagnostics in _diagnosticsTable)
            {
                <tr>
                    <td>@repositoryDiagnostics.RepositoryName</td>
                    <td>
                        <FluentButton Appearance="Appearance.Accent" @onclick="@(async () => await PreviewChanges(repositoryDiagnostics.Id))">Preview changes</FluentButton>
                        <FluentButton Appearance="Appearance.Accent" @onclick="@(async () => await CreateFix(repositoryDiagnostics.Id))">Create Fix</FluentButton>
                    </td>
                    @foreach (var ruleId in GetDiagnosticHeaders())
                    {
                        <td>@repositoryDiagnostics.Diagnostics[ruleId]</td>
                    }
                </tr>
            }
            </tbody>
        </table>
    }

    @if (_changesPreview is not null)
    {
        <code style="white-space: pre;">
            @_changesPreview
        </code>
    }

    @if (_dependencyTree is not null)
    {
        <FluentLabel Typo="Typography.H2"> Dependency tree </FluentLabel>
        <img src='https://g.gravizo.com/svg?@_dependencyTree' alt="Dependency tree diagram"/>
    }
}